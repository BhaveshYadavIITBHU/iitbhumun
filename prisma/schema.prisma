generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres.qmmytleeitfcvlsvudqx:MunRishabh1@aws-0-ap-south-1.pooler.supabase.com:6543/postgres"
  pgBouncer = true
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String?
  createdAt  DateTime  @default(now())
  formFilled Boolean   @default(false)
  payments   Payment[] 
}

model Portfolio {
  id        Int      @id @default(autoincrement())
  name      String
  portfolio String[] @default([])
}

model Registration {
  id                   Int      @id @default(autoincrement())
  eventId              Int      @map("Event_ID")
  name                 String   @map("Name")
  age                  String   @map("Age")
  gender               String   @map("Gender")
  city                 String?  @map("City")
  country              String?  @map("Country")
  instituteName        String   @map("Institute_Name")
  mobileNumber         String   @map("Mobile_Number")
  emailId              String   @unique @map("Email_ID")
  referralCode         String?  @default("") @map("Referral_Code")
  numberOfMUNs         String?  @map("No_of_MUNs")
  listOfPreviousMUNs   String?  @map("List_of_previous_MUNs")
  awardsInPreviousMUNs String?  @map("Awards_in_previous_MUNs")
  committees           String[]
  countryPreferences   Json
  paymentDone          Boolean? @default(false)
  allotmentApproved    Boolean? @default(false)
  alloted              String[] @default([])
  myReferralCount      Int?     @default(0)
  myReferralCode       String?  @default("")

  @@map("registrations")
}

model Payment {
  id         Int      @id @default(autoincrement())
  userId     Int
  ticketType String
  amount     Float
  imageUrl   String
  idCardUrl  String   @default("")
  status     String   @default("pending")
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])

  @@map("payments")
}
